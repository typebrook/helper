# My alias for bash and zsh

# __CONFIG__
# __NETWORK__
# __VIM__
# __SSH__
# __IMAP__
# __GIST__
# __UNIX__
# __PACMAN__
# __CD__
# __BLOG__
# __GIT__
# __GITHUB__
# __TIG__

# __CONFIG__
alias al="$EDITOR $SETTING_DIR/alias && source $SETTING_DIR/alias"
eval "${shell}rc(){
  local RCFILE=$XDG_CONFIG_HOME/${shell}/.${shell}rc
  vim \$RCFILE && source \$RCFILE
}"
alias vim='nvim'
alias vimrc='vim ~/.vimrc'
alias tigrc="$EDITOR ~/.tigrc"
alias muttrc="$EDITOR ~/.config/mutt/muttrc"
alias alarc="$EDITOR ~/.config/alacritty/alacritty.yml"
alias gitconfig="$EDITOR ~/.gitconfig"
alias gpgconfig="$EDITOR ~/.gnupg/gpg-agent.conf"
alias sshconfig="$EDITOR ~/.ssh/config"
alias sshauth="$EDITOR ~/.ssh/authorized_keys"
alias sshknown="$EDITOR ~/.ssh/known_hosts"
cdconfig(){ cd ~/.config/$1; }
alias tmuxconfig="$EDITOR ~/.tmux.conf"
cde() { cd /etc/$@; }
alias cdetc='cde'
alias ls='ls --color'
alias grep='grep --color'

# __NETWORK__
alias digg='dig +noall +answer +multiline'

# __VIM__
alias v='nvim'
alias vim='nvim'
alias vu='vim -u NONE'
alias vr='vim -R'
# Edit last file
alias vl="vim -c 'norm '"
# Use Telescope to select recent files
vll() {
  nvim -c 'Telescope oldfiles'
}
# Apply defaut session
alias vv="vim -S ~/.vim.session"
#alias vl="vim $(sed -n '/^[^#]/{p;q}' ~/.vim_mru_files)"
alias ve="vim ~/.config/nvim/nvim.lua"
alias vq='vim ~/buffer'
alias cdv='cd ~/.vim/vim-init'
vs() { which $1 && vim $(which $1); }
alias vS='vim -S ~/.vim.session'
[ "$shell" = zsh ] && compdef vs=which

# __SSH__
alias cdssh='cd ~/.ssh'
alias ptt='ssh ptt'
alias sshv='ssh -t vps'
ssh.tar() {
  prompt-vim "tar cf - foo | ssh vps 'cd ~/Downloads; tar xf -' \nssh vps 'tar czf - --directory=/working/path target' | tar xvzf -"
}
ssh.up() {
  set -o pipefail
  filename=${3:-`basename $1`}
  # Upload to absolution path
  if [[ $2 =~ '^/' ]]; then
    folder=${2%/}
    cat $1 | ssh vps "mkdir -p $folder; cat >${folder}/${filename}" || return 1
    echo Uploaded to ${folder}/${filename}
  # Upload to relative in ~/public/
  else
    folder='~/public/'${2%/}
    cat $1 | ssh vps "mkdir -p $folder; cat >${folder}/${filename}" || return 1
    echo https://topo.tw/p/${2%/}/${filename}
  fi
}
ssh.up.today() {
  DATE=$(date --iso-8601)
  ssh vps mkdir -p ~/public/$DATE
  ssh.up $1 $DATE
}
ssh.down() {
  ssh -t vps rm -rf -i ~/public/"$1"
}

# __IMAP__
imap.save() {
  curl "imaps://mail.topo.tw/$1" \
      --user pham:`pass mail/pham@mail.topo.tw` \
      -T $2
}
imap.save_attachment() {
  #TEMPFILE=$(mktemp)
  trap 'rm $TEMPFILE' EXIT
  mail -a $1 -Sexpandaddr /dev/stdout | \
  curl imaps://mail.topo.tw/INBOX \
      --user pham:`pass mail/pham@mail.topo.tw` \
      -T /dev/stdin
}
imap.search.subject() {
  curl "imaps://mail.topo.tw/$1" \
    --user pham:`pass mail/pham@mail.topo.tw` \
    --request "SEARCH SUBJECT $2"
}
imap.fetch() {
  curl "imaps://mail.topo.tw/$1;MAILINDEX=$2" \
    --user pham:`pass mail/pham@mail.topo.tw` | \
    dos2unix | \
    sed -E '0,/^ *$/d'
}

# __GIST__
alias g='gist'
alias gl='gist last'
unalias gg &>/dev/null
alias gg='gist grep'

# __UNIX__
alias chx='chmod +x'
alias chr='chmod +r'
alias k='kill %1'
alias s='sudo systemctl'
alias j='sudo journalctl -xeu'
alias m='mutt'
alias gmail="mutt -F $SETTING_DIR/mutt/muttrc.gmail"
alias ntu="mutt -F $SETTING_DIR/mutt/muttrc.b97602041"
path() { echo $PATH; } # Should not use alias, because $PATH is not initialized
ps1.swap() {
	if [ -z "$PS1_bak" ]; then PS1_bak="$PS1"
		PS1="${1:->}"
		PS1="${PS1%% } "
	else PS1="$PS1_bak"
		unset PS1_bak
	fi
}
fd() { echo /proc/$$/fd; ls -l /proc/$$/fd; }
port() { sudo lsof -i :$1; }
alias ports='sudo lsof -i -Pn | grep LISTEN'
alias ll='ls -lh'
alias lla='ls -lha'
alias lld='ls -lh -d */'
llw() { which $1 | xargs ls -alh; }
alias hg='history | grep'
trash() { mv $@ /tmp/ 2>/dev/null || rm -rf $@; }
rmrf() { rm -rf $@; }
alias rr='_move_to_tmp'
alias sound="echo -ne '\a'"
pst(){ pstree -ps ${1:-$$}; }
alias duu='du -hd 1 . | sort -hr'
name() { find . -iname "$1"; }
alias latest='find . -type f | xargs ls -ltr | tail'
cdp() {
  [[ ! -d $1 ]] && mkdir -p $1
  cd $1
}
_move_to_tmp() { mv $@ /tmp; }
prompt-vim() {
  TMPFILE=$(mktemp)
  echo -e "$@" >$TMPFILE \
  && vim $TMPFILE \
  && sed -i '$ q; s/$/ \\/' $TMPFILE \
  && eval $(<$TMPFILE tee /dev/tty)
  rm $TMPFILE
}
file.sort() {
  find $1 -type f -print0 |\
  xargs -0 ls --sort=size -lh |\
  head -20
}
file.size() {
  find $1 -type f -print0 |\
  xargs -0 ls -l |\
  awk '{ n=int(log($5)/log(2));
           if (n<10) n=10;
           size[n]++ }
       END { for (i in size) printf("%d %d\n", 2^i, size[i])
  }' |\
  sort -n |\
  awk 'function human(x) { x[1]/=1024; if (x[1]>=1024) { x[2]++; human(x) }}
  {
    a[1]=$1;
    a[2]=0;
    human(a);
    printf("%3d%s: %6d\n", a[1],substr("kMGTEPYZ",a[2]+1,1),$2)
  }'
}
highlight() { grep --color -E "$1|\$"; }
alias iso8601='date --iso-8601=minutes'
alias lock='sudo chattr +i'
# Reset clock
date.reset() {
  sudo date -s "$(wget -qSO- --max-redirect=0 google.com 2>&1 | grep Date: | cut -d' ' -f5-8)Z"
}
alias clock.reset='hwclock --systohc'
unalias gr &>/dev/null
gr() {
  grep -IR $1 .
}
alias findn='find . -iname'

# __PACMAN__
alias pac='sudo pacman -S' # pacman install
alias psy='sudo pacman -Syy'
alias ys='yay -S'
alias pqs='pacman -Qs'
alias pqi='pacman -Qi'
alias ysi='yay -Si'
alias pss='pacman -Ss'
alias yss='yay -Ss'
alias pqi='pacman -Qi'
alias pql='pacman -Qlq'
pqlb() {
    pacman -Qlq $1 | grep bin
}
alias yql='yay -Ql'
alias pf='pacman -F'
alias yf='yay -F'
alias pfl='pacman -Fl'
alias pqe='pacman -Qqe'
alias pR='sudo pacman -R'
psi() {
  [[ $(pacman -Qqe $1) != '' ]] 2>/dev/null && echo -e "$(tput setaf 13)[Installed]$(tput sgr0)"
  pacman -Si $1
}
pkgbuild() { git clone https://aur.archlinux.org/$1.git; }

# __CD__
alias ..='cd ..'
alias ld='cd -' # last directory
cdg() {
  target=$(sed 's# #/#g' <<<"$@")
  cd ~/git/$target || cd ~/git
}
alias cda='mkdir -p ~/data && cd ~/data'
alias cdd='cd ~/Downloads'
alias cdD='cd ~/Documents'
alias cdP='cd ~/Pictures'
alias cdpu='cd ~/public'
alias cdV='cd ~/Videos'
alias cdM='cd ~/Music'

# __BLOG__
alias cdb='cd ~/blog'
vp() {
  [[ $HOST = vultr ]] || PREFIX='ssh -qt vps'

  filename="${1%.md}.md"
  post=$(eval $PREFIX find ~/blog/content -name $filename | head -1 | sed 's/\r//')

  if [ -z "$post" ]; then
    echo "sh -c 'cd ~/blog && hugo new posts/$filename'" | eval ${PREFIX}
    post="~/blog/content/posts/$filename"
  fi

  shift
  if [[ $HOST = vultr ]]; then
    vim $@ "$post"
  else
    # Copy from vps
    tmpfile=$(mktemp --suffix .md)
    scp vps:"$post" $tmpfile

    # Edit locally
    vim $tmpfile --cmd "autocmd BufWritePost $tmpfile silent! :!setsid scp % vps:$post &"  && \
    cat $tmpfile | ssh vps "cd ~/blog && cat >$post && git add $post && git commit -m 'Update with vim'" && \
    rm $tmpfile
  fi
}

# __GIT__
unalias gc &> /dev/null # override zsh plugin alias
gc() { git clone $1 && cd $(basename ${1%.git}); }
gc1() { git clone --depth=1 $1 && cd $(basename $1); }
gcv() { gc vps:$1; }
alias gls='git log -S'
alias cdgg='cd $(git rev-parse --show-toplevel)'
alias cdgw='cdgg && cd .github/workflows'
alias cdgs='cd $(git submodule status | sed "s/^.//" | cut -d" "  -f2)' # cd to first submodule
alias ch="/home/pham/helper/bin/git/check-repos.sh"

# __GITHUB__
export GITHUB_API='https://api.github.com'
export GITHUB_API_TOKEN="~/.ssh/tokens/github 2>/dev/null)"
alias hub="GITHUB_TOKEN=$GITHUB_API_TOKEN hub"
github() {
  xdg-open https://github.com/$1/$2
}
github_api() {
  curl --header "Authorization: token $GITHUB_API_TOKEN" $GITHUB_API/$@
}
gcg() {
  local user=$1; local repo=$2; shift; shift
  git clone git@github.com:$user/$repo.git $@ && cd $(basename $repo)
}
release() {
  command="github-release.sh\n  github_api_token=$GITHUB_API_TOKEN\n  repo=typebrook/mapstew\n  tag=daily-taiwan-pbf\n  type=asset\n  filename=taiwan-latest.osm.pbf\n  action=upload|overwrite|rename|delete\n  extra="
  prompt "$command"
}
github.asset() {
  curl -LO https://github.com/$1/$2/releases/download/$3/$4
}
github.raw() {
  curl -O https://raw.githubusercontent.com/$1/$2/$3
}

# __TIG__
alias cdt='cd ~/git/tig'
alias t='tig'
alias ts='tig status'
alias ta='tig --all'
upload_tig() {
  github-release.sh \
    github_api_token=$GITHUB_API_TOKEN \
    repo=typebrook/tig \
    tag=LATEST \
    type=asset \
    filename=$(which tig)
    action=overwrite
}

# about custom settings
cdh() { cd $SETTING_DIR/$@; }
alias chh="tig -C $SETTING_DIR status"

# about beancount
alias cdB='cd $HOME/bean'
alias b='vim $HOME/bean/main.bean'

# crontab
alias ce='crontab -e'
alias cl='crontab -l'

# lf
alias r='_lf_cd'
alias l='_lf_cd'
_lf_cd() {
  tempfile=$(mktemp -t tmp.XXXXXX)
  lf --last-dir-path $tempfile

  test -f "$tempfile" && \
  cd -- "$(cat "$tempfile")" && \
  rm -f -- "$tempfile"
}

# disk
alias df='df -h'

# docker
alias dk='docker'
alias dc='docker-compose'
alias dis='docker images'
alias dps='docker ps'
alias dpsa='docker ps -a'
docker.sh() { docker run --rm -it --entrypoint /bin/sh $@; }
docker.bash() { docker run --rm -it --entrypoint /bin/bash $@; }
docker.tags() { curl -s -S "https://registry.hub.docker.com/v2/repositories/$@/tags/" | tee /dev/tty | jq '.results[]["name"]' | sort; }

# Android
alias debug='./gradlew app:installDebug && adb shell am start -n com.geothings.geobingan/.MainActivity_'
alias adb.view='adb shell am start -a android.intent.action.VIEW -d' 
alias adb.default='adb shell dumpsys package domain-preferred-apps'
alias adb.list='adb shell dumpsys package d'
alias rmcache='rm -rf ~/.gradle/caches/modules-2/files-2.1/org.jetbrains.kotlin/kotlin-stdlib-jdk7/*'
alias adb.screenshot='DIR=/sdcard/Pictures/Screenshots/; adb pull $DIR/`adb shell ls -t $DIR | head -1` .'
alias adb.camera='DIR=/sdcard/DCIM/Camera; adb pull $DIR/`adb shell ls -t $DIR | head -1` .'
alias adb.camera='DIR=/sdcard/DCIM/Camera; adb pull $DIR/`adb shell ls -t $DIR | head -1` .'
alias adb.input='adb shell input text'
adb.push() {
  adb push $1 /sdcard/Download
}

# curl
alias co='curl -O'
alias curl.code='curl -o /dev/null --silent -Iw "%{http_code}"'

# python
alias pip3='python3 -m pip'

# gdal
alias oo='ogr2ogr'
alias oi='ogrinfo -al -so'

# sample file
alias sample.text='curl http://metaphorpsum.com/paragraphs/3/5'
alias sample.gpx='curl -O https://docs.mapbox.com/help/data/run.gpx'
alias sample.geojson='curl -O https://docs.mapbox.com/help/data/stations.geojson'
alias sample.gpkg='curl -O http://www.geopackage.org/data/sample1_1.gpkg'
alias sample.shapefile='curl -O https://docs.mapbox.com/help/data/stations.zip && unzip stations.zip'
alias sample.geotiff='curl -O https://docs.mapbox.com/help/data/landsat.tif'
alias sample.csv='curl -O https://docs.mapbox.com/help/data/airports.csv'
alias sample.svg='curl -O https://docs.mapbox.com/help/data/bicycle-24.svg'
alias sample.mbtiles='curl -O https://docs.mapbox.com/help/data/trails.mbtiles'
alias sample.kml='curl -O https://docs.mapbox.com/help/data/farmers_markets.kml'
alias sample.osm='curl https://api.openstreetmap.org/api/0.6/node/3428095932'
alias sample.poly='curl -O http://download.geofabrik.de/asia/taiwan.poly'
alias sample.gpkg='curl -O http://www.geopackage.org/data/sample1_1.gpkg'
alias sample.mvt='curl -O https://demotiles.maplibre.org/tiles/5/25/14.pbf'
alias sample.lorem='curl http://metaphorpsum.com/paragraphs/4/16'
alias lorem='curl http://metaphorpsum.com/paragraphs/4/16'
alias sample.wmts='curl -O https://gis.sinica.edu.tw/tileserver/wmts'
sample.image() { curl -Lo random.png https://picsum.photos/seed/`date +%s`/${1:-500}/${2:-500}; }
alias proto.mvt='curl -O https://raw.githubusercontent.com/mapbox/vector-tile-spec/master/2.1/vector_tile.proto'
alias proto.osm='curl -O https://raw.githubusercontent.com/openstreetmap/OSM-binary/master/src/osmformat.proto'
alias proto.geobuf='curl -O https://raw.githubusercontent.com/mapbox/geobuf/master/geobuf.proto'
alias data.ical='curl -LO http://www.google.com/calendar/ical/zh-tw.taiwan%23holiday%40group.v.calendar.google.com/public/basic.ics'
taiwan_dem() {
  <<<"http://dtm.moi.gov.tw/不分幅_全台及澎湖.zip" perl -lpe 's/([^A-Za-z0-9.\/:])/sprintf("%%%02X", ord($1))/seg' |\
  xargs curl -Lo taiwan_dem.zip
  unzip -p taiwan_dem.zip dem_20m.tif >20m.tif
}

# data file
alias taiwan='curl -O http://download.geofabrik.de/asia/taiwan-latest.osm.pbf'
alias data.rudymap='curl -O https://raw.githubusercontent.com/alpha-rudy/taiwan-topo/master/styles/mapsforge_style/MOI_OSM.xml'
alias data.rudymap_ele='curl -O http://moi.kcwu.csie.org/osm_elevations/ele_taiwan_10_50_100_500_marker-2019.7.o5m'
data.osm_diff_min() {
  curl https://planet.openstreetmap.org/replication/minute/state.txt \
  | sed -n 2p | cut -d'=' -f2 | sed -r 's#(.{1})(.{3})#00\1/\2#' \
  | xargs -I{} echo 'https://planet.openstreetmap.org/replication/minute/{}'.osc.gz \
  | xargs curl -O
}
data.osm_diff_hour() {
  curl https://planet.openstreetmap.org/replication/hour/state.txt \
  | sed -n 2p | cut -d'=' -f2 | sed -r 's#(.{2})(.{3})#000/0\1/\2#' \
  | xargs -I{} echo 'https://planet.openstreetmap.org/replication/hour/{}'.osc.gz \
  | xargs curl -O
}
# https://data.gov.tw/dataset/7441
alias data.taiwan_town='curl -o town.zip -L  https://data.moi.gov.tw/MoiOD/System/DownloadFile.aspx\?DATA\=CD02C824-45C5-48C8-B631-98B205A2E35A'
alias data.taiwan_village='curl -o village.zip -L http://data.moi.gov.tw/MoiOD/System/DownloadFile.aspx\?DATA\=B8AF344F-B5C6-4642-AF46-1832054399CE'
alias data.taiwan_poly='curl -O http://download.geofabrik.de/asia/taiwan.poly'
alias data.taiwan_county_code='curl --silent https://www.ris.gov.tw/documents/data/5/1/RSCD0101.txt | iconv -f BIG-5 -t UTF-8 -'

# clipboard
alias xi='xsel -ib'
alias xii='`fc -ln -1` | head -1 | xsel -ib'
alias xo='xsel -ob'
alias xl='history | tail -1 | grep -oP "^\s*[0-9]+\s\s\K.*" | xsel -ib && echo Copied to clipboard && xsel -ob'

# Text Encode/Decode
big52utf8() {
  iconv -f BIG-5 -t UTF-8
}
utf82big5() {
  iconv -t BIG-5 -f UTF-8
}
urlencode() {
  perl -lpe 's/([^A-Za-z0-9.\/:])/sprintf("%%%02X", ord($1))/seg'
  # Alternative:
  # curl -Gso /dev/null -w %{url_effective} --data-urlencode @- ""
}

# Network
alias p8='ping -c 3 8.8.8.8'
alias curl.google='curl -v google.com'
alias curl.wifi='curl -I google.com | grep -E "^Location:" | cut -d" " -f2 | xsel -ib'

# misc
alias foo='echo bar > foo && echo File foo is created && ls -lh foo'
alias bar='echo foo > bar && echo File bar is created && ls -lh bar'
unalias gr &>/dev/null
alias wcl='wc -l'
alias x='xdg-open'
alias yl='youtube-dl'
alias yla='youtube-dl -x --audio-format mp3'
yt.audio() {
  yt-dlp --verbose -x --audio-format mp3 --add-metadata $1
}
alias editor='select-editor'
alias hp='http-prompt'
alias clocg='cloc --vcs=git'
alias tma='tmux a'
pbf() {
  protoc --decode_raw
}
mvt.decode() {
  if [[ ! -t 0 ]]; then
    cat >$tmp
    tmp=$(mktemp)
  else
    tmp=$1
  fi
  mvt_decode.py $tmp | tr \' \" | sed 's/True/true/g; s/False/false/g'
}
bak() {
  cp $1 $1.bak
}
wrap2geojson() { jq -s '{ type: "FeatureCollection", features: . }'; }
alias cdtrash='cd ~/.local/share/Trash'
trash() { mv $@ ~/.local/share/Trash; }
alias ge='graph-easy --boxart'

# pass
alias chp='tig -C ~/.password-store'
alias chpass='tig -C ~/.password-store'
alias cdpass='cd ~/.password-store'
alias p='pass'
alias pc='pass -c'
alias pe='pass edit'
alias pgn='pass generate --in-place --clip'
alias pgc='pass generate --clip'
words() {
    cat /usr/share/dict/usa | egrep "^[a-z]{4,8}$" | shuf | head -40 | xargs -n${1:-2}
}

# Nginx
alias vgx='sudo vim /etc/nginx/sites-enabled/vps && sudo nginx -t && sudo systemctl reload nginx'
alias cdngx='cd /etc/nginx'

# tmp
alias stew='cd ~/git/mapstew'
alias vc='vultr-cli'
alias xkb='cd $SETTING_DIR && make xkb'
alias thsr='curl -L google.com >/tmp/foo.html && xdg-open /tmp/foo.html'
todo() { cd ~/log && grep -R ' TODO ' --exclude-dir=logseq/; }
fix() { which $1 && grep -Po 'FIXME.*' $(which $1); }
alias ffmpeg='ffmpeg -hide_banner'
alias md='reveal'
alias terminal.color='printf "\e[%dm%d dark\e[0m \e[%d;1m%d bold\e[0m\n" {30..37}{,,,}'
alias gpg.bye='gpg-connect-agent reloadagent /bye'

# GIS
TAIWAN_BBOX='118.1036,20.72799,122.9312,26.60305'
TAIWAN_BBOX_V='20.72799,118.1036,26.60305,122.9312'
TAIPEI_BBOX='121.346,24.926,121.676,25.209'
TAIPEI_BBOX_V='24.926,121.346,25.209,121.676'

# Comment out
#alias mm='mkvmerge -o out.webm -w 01.webm + 02.webm'
#alias we='weechat'

LOCAL_ALIAS=~/.config/local.alias
alias allo="$EDITOR $LOCAL_ALIAS && source $LOCAL_ALIAS"
if [ -e $LOCAL_ALIAS ]; then
  source $LOCAL_ALIAS
fi
